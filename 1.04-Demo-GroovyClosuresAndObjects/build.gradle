task groovy << {}

def foo = "One million dollars"
def myClosure = {
	println "Hello from a closure"
	println "The value of foo is $foo"
}

myClosure()
def bar = myClosure
def baz = bar
baz()

def doubleIt = {
	x -> x + x
}

def applyTwice(func, arg) {
	func(func(arg))
}

foo = 5
def fooDoubleTwice = applyTwice(doubleIt, foo)
println "Applying doubleIt twice to $foo equals $fooDoubleTwice"

def myList = ["Gradle", "Groovy", "Android"]
def printItem = {
	item -> println "List item: $item"
}
myList.each(printItem)

myList.each {
	println "Compactly println each list item: $it"
}

class GroovyGreeter {
	String greeting = "Default greeting"
	def printGreeting() {
		println "Greeting: $greeting"
	}
}
def myGroovyGreeter = new GroovyGreeter()
myGroovyGreeter.printGreeting()
myGroovyGreeter.greeting = "My custom greeting"
myGroovyGreeter.printGreeting()

def greetingClosure = {
	greeting = "Setting the greeting from a closure"
	printGreeting()
}
greetingClosure.delegate = myGroovyGreeter
greetingClosure()